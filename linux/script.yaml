apiVersion: apps/v1
kind: Deployment
metadata:
  name: gowebserver-deployment
spec:
  selector:
    matchLabels:
      app: gowebserver
  replicas: 2
  template:
    metadata:
      name: gowebserver
      namespace: gowebserver
      labels:
        app: gowebserver
    spec:
      containers:
        - image: 'MY_NEW_IMAGE'
          name: gowebserver
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 2
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
            timeoutSeconds: 2
            periodSeconds: 10
            failureThreshold: 3
          lifecycle:
            preStop:
              httpGet:
                port: 8080
                path: shutdown
      initContainers:
        - image: 'MY_NEW_IMAGE'
          name: init-server
          command:
            - sh
            - '-c'
            - sleep 30
---
apiVersion: v1
kind: Service
metadata:
  name: gowebserver-service
spec:
  selector:
    app: gowebserver
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: LoadBalancer